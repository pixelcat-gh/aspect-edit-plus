/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LevelOptionsAccessory.java
 *
 * Created on 21-Feb-2009, 19:03:00
 */

package aspectedit.frames.action.accessories;

import aspectedit.util.OffsetSpinnerBuilder;
import javax.swing.JPanel;

/**
 *
 * @author mark
 */
public class OpenTilesetOptionsAccessory extends JPanel {

    /** Creates new form LevelOptionsAccessory */
    public OpenTilesetOptionsAccessory() {
        initComponents();
    }

    public int getOffset() {
        return (Integer) offsetSpinner.getValue();
    }

    public void setOffset(int offset) {
        offsetSpinner.setValue(offset);
    }
    
    public boolean isCompressed() {
        return compressedRadio.isSelected();
    }

    public void setTileCount(int tileCount) {
        tileCountSpinner.setValue(tileCount);
    }
    
    public int getTileCount() {
        return (Integer)tileCountSpinner.getValue();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        compressedRadio = new javax.swing.JRadioButton();
        uncompressedRadio = new javax.swing.JRadioButton();
        offsetSpinner = OffsetSpinnerBuilder.build();
        jLabel3 = new javax.swing.JLabel();
        tileCountSpinner = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jLabel1.setText("Offset:");

        jLabel2.setText("Compression:");

        buttonGroup1.add(compressedRadio);
        compressedRadio.setSelected(true);
        compressedRadio.setText("Compressed");
        compressedRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compressedRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(uncompressedRadio);
        uncompressedRadio.setText("Uncompressed");
        uncompressedRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncompressedRadioActionPerformed(evt);
            }
        });

        jLabel3.setText("Tile Count:");

        tileCountSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        tileCountSpinner.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uncompressedRadio, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(compressedRadio, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(offsetSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(tileCountSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(offsetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(compressedRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(uncompressedRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tileCountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void uncompressedRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uncompressedRadioActionPerformed
        tileCountSpinner.setEnabled(uncompressedRadio.isSelected());
    }//GEN-LAST:event_uncompressedRadioActionPerformed

    private void compressedRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compressedRadioActionPerformed
        tileCountSpinner.setEnabled(uncompressedRadio.isSelected());
    }//GEN-LAST:event_compressedRadioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton compressedRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner offsetSpinner;
    private javax.swing.JSpinner tileCountSpinner;
    private javax.swing.JRadioButton uncompressedRadio;
    // End of variables declaration//GEN-END:variables

}
