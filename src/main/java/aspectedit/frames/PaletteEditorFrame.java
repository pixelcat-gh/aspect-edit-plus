/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PaletteEditor.java
 *
 * Created on 30-Jan-2009, 19:12:16
 */

package aspectedit.frames;

import aspectedit.components.tileview.TileSelectionEvent;
import aspectedit.components.tileview.TileSelectionListener;
import aspectedit.components.tileview.adapters.PaletteViewAdapter;
import aspectedit.frames.action.OpenPaletteAction;
import aspectedit.frames.action.SavePaletteAction;
import aspectedit.frames.action.SavePaletteAsAction;
import aspectedit.palette.GGPalette;
import aspectedit.palette.MasterPalette;
import aspectedit.palette.Palette;
import javax.swing.JInternalFrame;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author mark
 */
public class PaletteEditorFrame extends JInternalFrame implements TileSelectionListener {

    private SavePaletteAction saveAction;
    private SavePaletteAsAction saveAsAction;
    private OpenPaletteAction openAction;

    private PaletteViewAdapter paletteAdapter;
    private PaletteViewAdapter masterPaletteAdapter;

    private Palette palette;

    /** Creates new form PaletteEditor */
    public PaletteEditorFrame() {
        this(new Palette());
    }


    @SuppressWarnings("unchecked")
    public PaletteEditorFrame(Palette palette) {
        saveAction = new SavePaletteAction();
        saveAsAction = new SavePaletteAsAction();
        openAction = new OpenPaletteAction();

        paletteAdapter = new PaletteViewAdapter();
        masterPaletteAdapter = new PaletteViewAdapter();
        masterPaletteAdapter.setPalette(new MasterPalette());

        initComponents();

        if(palette instanceof GGPalette) {
            ((SpinnerNumberModel) redSpinner.getModel()).setMaximum(15);
            ((SpinnerNumberModel) greenSpinner.getModel()).setMaximum(15);
            ((SpinnerNumberModel) blueSpinner.getModel()).setMaximum(15);

            setTitle("GG Palette Editor");
        }

        setPalette(palette);
    }


    @SuppressWarnings("unchecked")
    private void updateColourValue() {
        int index = paletteView.getSelectedTileIndex();
        if(index == -1) return;

        int r = (Integer)redSpinner.getValue();
        int g = (Integer)greenSpinner.getValue();
        int b = (Integer)blueSpinner.getValue();

        paletteAdapter.setColour(index, r, g, b);
    }

    @Override
    public void notifyTileSelected(TileSelectionEvent evt) {
        if(evt.getSource() == paletteView) {
            redSpinner.setEnabled(true);
            blueSpinner.setEnabled(true);
            greenSpinner.setEnabled(true);

            int index = paletteView.getSelectedTileIndex();
            int colour = palette.getColour(index);

            if(palette instanceof GGPalette) {
                redSpinner.setValue(colour & 15);
                greenSpinner.setValue( (colour >> 4) & 15 );
                blueSpinner.setValue( (colour >> 8) & 15 );

            } else {
                redSpinner.setValue(colour & 3);
                greenSpinner.setValue( (colour >> 2) & 3);
                blueSpinner.setValue( (colour >> 4) & 3 );
            }
            
        }
    }

    public Palette getPalette() {
        return palette;
    }

    public void setPalette(Palette palette) {
        if(palette == null) throw new IllegalArgumentException("Palette cannot be null.");

        this.palette = palette;

        paletteAdapter.setPalette(palette);
        saveAction.setPalette(palette);
        saveAsAction.setPalette(palette);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        paletteView = new aspectedit.components.tileview.TileView();
        jToolBar1 = new javax.swing.JToolBar();
        openButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        saveAsButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        redSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        greenSpinner = new javax.swing.JSpinner();
        blueSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Palette Editor");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Palette"));

        paletteView.setEditingModel(masterPaletteAdapter);
        paletteView.setModel(paletteAdapter);
        paletteView.setPreferredSize(new java.awt.Dimension(64, 64));
        paletteView.addTileSelectionListener(this);

        javax.swing.GroupLayout paletteViewLayout = new javax.swing.GroupLayout(paletteView);
        paletteView.setLayout(paletteViewLayout);
        paletteViewLayout.setHorizontalGroup(
            paletteViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );
        paletteViewLayout.setVerticalGroup(
            paletteViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paletteView, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(paletteView, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        openButton.setAction(openAction);
        openButton.setToolTipText(openAction.getValue(OpenPaletteAction.NAME).toString());
        openButton.setFocusable(false);
        openButton.setHideActionText(true);
        openButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(openButton);

        saveButton.setAction(saveAction);
        saveButton.setToolTipText(saveAction.getValue(SavePaletteAction.NAME).toString());
        saveButton.setFocusable(false);
        saveButton.setHideActionText(true);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(saveButton);

        saveAsButton.setAction(saveAsAction);
        saveAsButton.setToolTipText(saveAsAction.getValue(SavePaletteAsAction.NAME).toString());
        saveAsButton.setFocusable(false);
        saveAsButton.setHideActionText(true);
        saveAsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveAsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(saveAsButton);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Colour Properties"));

        jLabel1.setText("Red:");

        redSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        redSpinner.setEnabled(false);
        redSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                redSpinnerStateChanged(evt);
            }
        });

        jLabel2.setText("Green:");

        greenSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        greenSpinner.setEnabled(false);
        greenSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                greenSpinnerStateChanged(evt);
            }
        });

        blueSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        blueSpinner.setEnabled(false);
        blueSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blueSpinnerStateChanged(evt);
            }
        });

        jLabel3.setText("Blue:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(blueSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(greenSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(redSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(greenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blueSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void redSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_redSpinnerStateChanged
        updateColourValue();
    }//GEN-LAST:event_redSpinnerStateChanged

    private void blueSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blueSpinnerStateChanged
        updateColourValue();
    }//GEN-LAST:event_blueSpinnerStateChanged

    private void greenSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_greenSpinnerStateChanged
        updateColourValue();
    }//GEN-LAST:event_greenSpinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner blueSpinner;
    private javax.swing.JSpinner greenSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton openButton;
    private aspectedit.components.tileview.TileView paletteView;
    private javax.swing.JSpinner redSpinner;
    private javax.swing.JButton saveAsButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
